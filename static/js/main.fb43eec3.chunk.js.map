{"version":3,"sources":["components/Section/StyledComponents.js","components/Section/Section.js","components/PhoneForm/StyledComponents.js","components/PhoneForm/PhoneForm.js","components/ContactList/StyledComponents.js","components/ContactList/ContactList.js","components/FilterContacts/StyledComponents.js","components/FilterContacts/FilterContacts.js","App.js","index.js"],"names":["Section","styled","section","Title","h2","SectionBlock","title","children","Form","form","FormLabel","label","Button","button","PhoneForm","onAddContact","useState","nameValue","setNameValue","numberValue","setNumberValue","handlerInput","e","target","name","value","onSubmit","preventDefault","type","onChange","required","placeholder","minLength","maxLength","TaskList","ul","TaskItem","li","TaskItemElements","p","ContactList","items","onDeleteContact","map","i","number","onClick","id","FilterBlock","div","Label","Input","input","FilterContacts","OnInputFilter","event","App","contacts","setContacts","nameFilter","setNameFilter","useEffect","localStorage","getItem","arrLoadContacts","JSON","parse","setItem","stringify","visibleContacts","filter","item","toLowerCase","includes","some","error","text","delay","isMobilePhone","contact","uniqid","prevState","createContact","inputValue","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.fb43eec3.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Section = styled.section`\n  padding: 20px 0px 20px;\n  max-width: 600px;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\nconst Title = styled.h2`\n  width: 100%;\n  text-align: center;\n  font-size: 1rem;\n  color: green;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-bottom: 20px;\n`;\nexport { Section, Title };\n","import React from 'react';\nimport { Section, Title } from './StyledComponents';\nimport PropTypes from 'prop-types';\n\nexport default function SectionBlock({ title, children }) {\n  return (\n    <Section>\n      <Title>{title}</Title>\n      {children}\n    </Section>\n  );\n}\n\nSectionBlock.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nconst FormLabel = styled.label`\n  width: 85%;\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-around;\n`;\nconst Button = styled.button`\n  padding: 5px 10px;\n  max-width: 250px;\n  height: 40px;\n  background-color: green;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n`;\n\nexport { Form, FormLabel, Button };\n","import { useState } from 'react';\nimport { Form, FormLabel, Button } from './StyledComponents';\n\nexport default function PhoneForm({ onAddContact }) {\n  const [nameValue, setNameValue] = useState('');\n  const [numberValue, setNumberValue] = useState('');\n\n  const handlerInput = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'nameValue':\n        setNameValue(value);\n        break;\n      case 'numberValue':\n        setNumberValue(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handlerFormSubmit = e => {\n    e.preventDefault();\n    onAddContact(nameValue, numberValue);\n\n    setNameValue('');\n    setNumberValue('');\n  };\n\n  return (\n    <Form onSubmit={handlerFormSubmit}>\n      <FormLabel>\n        Name:\n        <input\n          type=\"text\"\n          name=\"nameValue\"\n          onChange={handlerInput}\n          value={nameValue}\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Phone:\n        <input\n          type=\"text\"\n          name=\"numberValue\"\n          onChange={handlerInput}\n          value={numberValue}\n          placeholder=\"+3(___)___-__-__\"\n          minLength=\"13\"\n          maxLength=\"13\"\n          required\n        />\n      </FormLabel>\n      <Button type=\"submit\">Add Contact</Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nconst TaskList = styled.ul`\n  max-width: 700px;\n  margin: 0 auto;\n`;\nconst TaskItem = styled.li`\n  padding: 10px 10px 10px 10px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  background-color: grey;\n  border: 2px solid black;\n  border-radius: 0.5rem;\n  margin-bottom: 10px;\n  box-shadow: 10px 5px 5px grey;\n`;\nconst TaskItemElements = styled.p`\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\nconst Button = styled.button`\n  padding: 5px 10px;\n  max-width: 200px;\n  height: 30px;\n  background-color: goldenrod;\n  border: none;\n  border-radius: 0.5rem;\n  font-size: 0.8rem;\n  color: #fff;\n  text-transform: uppercase;\n  cursor: pointer;\n`;\nexport { TaskList, TaskItem, TaskItemElements, Button };\n","import React from 'react';\nimport {\n  TaskList,\n  TaskItem,\n  TaskItemElements,\n  Button,\n} from './StyledComponents';\nimport PropTypes from 'prop-types';\n\nexport default function ContactList({ items, onDeleteContact }) {\n  return (\n    <TaskList>\n      {items.map(i => (\n        <TaskItem key={i.id}>\n          <TaskItemElements>{i.name} :</TaskItemElements>\n          <TaskItemElements>{i.number}</TaskItemElements>\n          <Button type=\"button\" onClick={() => onDeleteContact(i.id)}>\n            Delete\n          </Button>\n        </TaskItem>\n      ))}\n    </TaskList>\n  );\n}\n\nContactList.propTypes = {\n  items: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nconst FilterBlock = styled.div`\n  width: 100%;\n  padding-bottom: 20px;\n`;\nconst Label = styled.label`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\nconst Title = styled.p`\n  width: 100%;\n  text-align: center;\n  margin-bottom: 5px;\n`;\nconst Input = styled.input`\n  width: 50%;\n`;\n\nexport { FilterBlock, Label, Title, Input };\n","import React from 'react';\nimport { FilterBlock, Label, Title, Input } from './StyledComponents';\nimport PropTypes from 'prop-types';\n\nexport default function FilterContacts({ value, OnInputFilter }) {\n  return (\n    <FilterBlock>\n      <Label>\n        <Title>Find Contacts by name</Title>\n        <Input\n          type=\"text\"\n          value={value}\n          onChange={event => OnInputFilter(event.target.value)}\n        />\n      </Label>\n    </FilterBlock>\n  );\n}\n\nFilterContacts.propTypes = {\n  OnInputFilter: PropTypes.func,\n  value: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport uniqid from 'uniqid';\nimport SectionBlock from './components/Section/Section';\nimport PhoneForm from './components/PhoneForm/PhoneForm';\nimport ContactsList from './components/ContactList/ContactList';\nimport FilterContacts from './components/FilterContacts/FilterContacts';\nimport { error } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport '@pnotify/confirm/dist/PNotifyConfirm.css';\nimport isMobilePhone from 'validator/es/lib/isMobilePhone';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n\n  useEffect(() => {\n    if (localStorage.getItem('saveContacts')) {\n      const arrLoadContacts = JSON.parse(localStorage.getItem('saveContacts'));\n      setContacts(arrLoadContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('saveContacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const filterContactList = () => {\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(nameFilter.toLowerCase()),\n    );\n  };\n\n  const addContact = (name, number) => {\n    let isContactPresent = contacts.some(item =>\n      item.name.toLowerCase().includes(name.toLowerCase()),\n    );\n    const createContact = () => {\n      const contact = {\n        name,\n        number,\n        id: uniqid(),\n      };\n      setContacts(prevState => [...prevState, contact]);\n    };\n    const errorBadValueNumber = () => {\n      return error({\n        title: 'Hi!',\n        text:\n          'BAD value phone-number!!! You must enter phone-number correct format',\n        delay: 3000,\n      });\n    };\n\n    const errorContactPresent = () => {\n      return error({\n        title: 'Hi!',\n        text: 'This contact is present in phone-book!',\n        delay: 3000,\n      });\n    };\n\n    if (!isContactPresent) {\n      isMobilePhone(number) ? createContact() : errorBadValueNumber();\n    } else {\n      errorContactPresent();\n    }\n  };\n\n  const deleteContact = id => {\n    setContacts(prevState => prevState.filter(e => e.id !== id));\n  };\n\n  const contactsFilterInput = inputValue => {\n    setNameFilter(inputValue);\n  };\n  const visibleContacts = filterContactList();\n\n  return (\n    <>\n      <SectionBlock title=\"Phone-book\">\n        <PhoneForm onAddContact={addContact} />\n      </SectionBlock>\n      <SectionBlock title=\"Contacts\">\n        <FilterContacts\n          value={nameFilter}\n          OnInputFilter={contactsFilterInput}\n        />\n        <ContactsList items={visibleContacts} onDeleteContact={deleteContact} />\n      </SectionBlock>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@csstools/normalize.css';\nimport './base.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}